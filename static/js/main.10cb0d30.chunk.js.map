{"version":3,"sources":["components/Expenses/ExpensesFilter.js","components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpensesFilter","props","className","value","selected","onChange","event","onChangeFilter","target","Card","classes","children","ExpenseDate","day","date","toLocaleString","month","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","currentExpensesList","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","App","setExpenses","useEffect","fetchExistedExpenses","a","fetch","response","json","key","responseData","loadedExpenses","push","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.10cb0d30.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHander = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by Year</label>\n        <select value={props.selected} onChange={dropdownChangeHander}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import \"./Card.css\";\n\nfunction Card(props) {\n  const classes = \"card \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n}\n\nexport default Card;\n","import \"./ExpenseDate.css\";\n\nfunction ExpenseDate(props) {\n  const day = props.date.toLocaleString(\"en-AU\", { day: \"2-digit\" });\n  const month = props.date.toLocaleString(\"en-AU\", { month: \"long\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__day\">{day}</div>\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n","import React from \"react\";\nimport \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\nfunction ExpenseItem(props) {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n}\n\nexport default ExpenseItem;\n","import \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport React from \"react\";\n\nconst ExpensesList = (props) => {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">No Expenses Found</h2>;\n  }\n\n  const currentExpensesList = props.items.map((expense) => (\n    <ExpenseItem\n      key={expense.id}\n      title={expense.title}\n      amount={expense.amount}\n      date={expense.date}\n    />\n  ));\n\n  return <ul className=\"expenses-list\">{currentExpensesList}</ul>;\n};\n\nexport default ExpensesList;\n","import React from \"react\";\n\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"char-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\n\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport Card from \"../UI/Card\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nfunction Expenses(props) {\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList items={filteredExpenses} />\n      </Card>\n    </div>\n  );\n}\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  //   const [userInput, setUserInput] = useState({\n  //     enteredTitle: \"\",\n  //     enteredAmount: \"\",\n  //     enteredDate: \"\",\n  //   });\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: event.target.value };\n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredAmount: event.target.value };\n    // });\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredDate: event.target.value };\n    // });\n  };\n\n  /**\n   * This handler used to submit inputed data, by invoking callback function onSaveExpenseData\n   * @param {onSubmit} event\n   */\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      //enforce a number conversion\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2021-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n  return (\n    <div className=\"new-expense\">\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancel={stopEditingHandler}\n        />\n      )}\n      {!isEditing && (\n        <button onClick={startEditingHandler}>Add New Expense</button>\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React, { useState, useEffect } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst App = () => {\n  const [expenses, setExpenses] = useState([]);\n\n  useEffect(() => {\n    const fetchExistedExpenses = async () => {\n      const response = await fetch(\n        \"https://mini-wallet-23d6b-default-rtdb.firebaseio.com/current_expenses.json\"\n      );\n      const responseData = await response.json();\n      const loadedExpenses = [];\n\n      for (const key in responseData) {\n        //destructing amount, date, title from responseData[key]\n        const { amount, date, title } = responseData[key];\n        loadedExpenses.push({\n          id: key,\n          title: title,\n          amount: amount,\n          // Convert date from string to Date type\n          date: new Date(date),\n        });\n      }\n\n      setExpenses(loadedExpenses);\n    };\n\n    fetchExistedExpenses();\n  }, []);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}